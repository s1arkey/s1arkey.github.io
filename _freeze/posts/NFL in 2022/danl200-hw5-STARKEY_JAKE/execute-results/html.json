{
  "hash": "4801635fc276e0eb684adb700f55e4cb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"NFL 2022\"\nauthor: \"Jake Starkey\"\ndate: \"2023-11-02\"\ncategories: [NFL]\nimage: \"patty.jpeg\"\n---\n\n\n\n# Question 1. Personal Website on GitHub\n\n## Q1a\n\n-   Provide a link for your Github repository ‚úÖ <https://github.com/s1arkey/s1arkey.github.io>\n\n-   Add a URL for your website (https://YOUR_GITHUB_USERNAME.github.io/) in the About section in your GitHub repository webpage by clicking the setting. ‚úÖ\n\n    -   See about section in my GitHub repository webpage for answer\n    -   Link to website <https://s1arkey.github.io/>\n\n## Q1b\n\n-   Make sure that your GitHub repository, named YOUR_GITHUB_USERNAME.github.io, is set to public. ‚úÖ\n\n-   Update your website at https://YOUR_GITHUB_USERNAME.github.io/index.html to:\n\n    -   Include links to (1) your LinkedIn page, (2) GitHub page (https://github.com/YOUR_GITHUB_USERNAME), and (3) a PDF file of your R√®sume (https://YOUR_GITHUB_USERNAME.github.io/YOUR_RESUME.pdf) ‚úÖ\n\n    -   Offer a description of yourself, detailing your education background and professional experience. ‚úÖ\n\n    -   Display your own profile picture with your face, not the one shown below. ‚úÖ\n\n## Q1c\n\n-   Change the title of your blog. ‚úÖ\n\n    -   That is, to replace Insightful Analytics with your own blog name.\n\n-   Remove the blog posts Post With Code, Starwars, and Beer Markets. ‚úÖ\n\n-   Revise the Welcome To My Blog post. ‚úÖ\n\n-   Post three different blog articles based on data analysis using the following three CSV files: ‚úÖ\n\n    1.  https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv\n    2.  https://bcdanl.github.io/data/spotify_all.csv\n    3.  https://bcdanl.github.io/data/beer_markets.csv\n\n    -   Make sure that each blog post has categories and is associated with a proper image file that is displayed as a thumbnail at the list page of the blog. ‚úÖ\n\n    -   Make sure that each blog post uses emojis properly. (E.g., üòÑ üç∫ üé∂ üçï) ‚úÖ\n\n    -   Make sure that each blog post includes its thumbnail image and at least three ggplot figures. ‚úÖ\n\n    -   You can refer to the previous DANL 200 Homework Assignments and Exams for your blog posts.\n\n##Question 2. NFL in 2022 üèà\n\n-   Add a blog post with your answers for Question 2 to your website (https://YOUR_GITHUB_USERNAME.github.io/).\n    -   Make sure that your blog post for Question 2 includes all the questionnaires and your answers to them.\n    -   Make sure that your blog post for Question 2 has a section for each sub-question (e.g., Q2a, Q2b) in Question 2, so that the Table of Contents display the section for each questionnaire.\n-   The following is the data.frame for Question 2.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs <- read.csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n```\n:::\n\n\n\n-   NFL2022_stuffs is the data.frame that contains information about NFL games in year 2022, in which the unit of observation is a single play for each drive in a NFL game.\n\n## Variable Description üèà\n\n-   play_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\n-   game_id: Ten digit identifier for NFL game.\n-   drive: Numeric drive number in the game.\n-   week: Season week.\n-   posteam: String abbreviation for the team with possession.\n-   qtr: Quarter of the game (5 is overtime).\n-   half_seconds_remaining: Numeric seconds remaining in the half.\n-   down: The down for the given play.\n    -   Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it).\n    -   If you make 10 yards then you get another set of four downs.\n-   pass: Binary indicator if the play was a pass play.\n-   wp: Estimated winning probability for the posteam given the current situation at the start of the given play.\n\n## Q2a üèà\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'dplyr' was built under R version 4.2.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.4     ‚úî readr     2.1.4\n‚úî forcats   1.0.0     ‚úî stringr   1.5.0\n‚úî ggplot2   3.4.4     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.4     ‚úî tidyr     1.3.0\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n:::\n\n\n\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq2a <- NFL2022_stuffs %>% \n  filter(!is.na(posteam))\n```\n:::\n\n\n\n## Q2b üèà\n\n-   Summarize the mean value of pass for each posteam when all the following conditions hold:\n\n1.  wp is greater than 20% and less than 75%;\n2.  down is less than or equal to 2; and\n3.  half_seconds_remaining is greater than 120.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq2b <- NFL2022_stuffs %>% \n  filter(between(wp, 0.2, 0.75),\n         down <= 2,\n         half_seconds_remaining > 120)\n\nmeanvalq2b <- q2b %>% \n  group_by(posteam) %>% \n  summarise(mean_pass = mean(pass, na.rm = TRUE))\n```\n:::\n\n\n\n## Q2c üèà\n\n-   Provide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n    -   In the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeanvaldesc <- meanvalq2b %>% \n  arrange(desc(mean_pass))\n\nggplot(meanvaldesc, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point()+\n  labs(x= \"Percentage of Pass Plays\",\n       y= \"Team with possesion\")\n```\n\n::: {.cell-output-display}\n![](danl200-hw5-STARKEY_JAKE_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nComments:\n\n-   Cincinnati, Kansas City, Los Angeles Chargers, Buffalo Bills, and Philadelphia eagles had the top 5 highest average percentage of pass plays during the 2022 season.\n-   Atlanta, Washington, Chicago, New Orleans, and Tennessee had the top 5 lowest average percentage of pass plays during the 2022 season.\n\n## Q2d üèà\n\n-   Consider the following data.frame, NFL2022_epa:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_epa <- read.csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n```\n:::\n\n\n\n-   Variable description for NFL2022_epa\n    -   play_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\n    -   game_id: Ten digit identifier for NFL game.\n    -   drive: Numeric drive number in the game.\n    -   posteam: String abbreviation for the team with possession.\n    -   passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\n    -   receiver: Name of the receiver.\n    -   epa: Expected points added (EPA) by the posteam for the given play.\n-   Create the data.frame, NFL2022_stuffs_EPA, that includes\n    1.  All the variables in the data.frame, NFL2022_stuffs;\n    2.  The variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n-   In the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\nAnswer:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs_EPA <- left_join(NFL2022_stuffs, NFL2022_epa, by = c(\"play_id\", \"game_id\", \"drive\", \"posteam\"))\n\nNFL2022_stuffs_EPA <- NFL2022_stuffs_EPA %>%\n  filter(!is.na(passer))\n```\n:::\n\n\n\n## Q2e üèà\n\n-   Provide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n    1.  \"J.Allen\"\n    2.  \"P.Mahomes\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntwo_passers <- c(\"J.Allen\", \"P.Mahomes\")\n\nfiltered_twopassers <- NFL2022_stuffs_EPA %>% \n  filter(passer %in% two_passers)\n\nmean_epa_data <- filtered_twopassers %>% group_by(week, passer) %>% \n  summarise(mean_epa = mean(epa, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'week'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(mean_epa_data, aes(x= week, y= mean_epa, color = passer))+\n  geom_line()+\n  scale_color_manual(values =c(\"J.Allen\" =\"blue\", \"P.Mahomes\"=\"red\"))+\n  labs(x= \"Week\",\n       y= \"Mean value of expected points added (EPA)\")\n```\n\n::: {.cell-output-display}\n![](danl200-hw5-STARKEY_JAKE_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nComment: Patrick Mahomes generally had a higher mean value of epa. However, there were a few weeks that Josh Allen had a higher mean value of epa.\n\n## Q2f üèà\n\nCalculate the difference between the mean value of epa for \"J.Allen\" the mean value of epa for \"P.Mahomes\" for each value of week.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndifference_epa <- mean_epa_data %>% \n  pivot_wider(names_from = passer, values_from = mean_epa)\n\ndifference_epa$epa_differnce <- difference_epa$'J.Allen' - difference_epa$'P.Mahomes'\n\nprint(difference_epa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 22 √ó 4\n# Groups:   week [22]\n    week J.Allen P.Mahomes epa_differnce\n   <int>   <dbl>     <dbl>         <dbl>\n 1     1   0.530    0.698        -0.169 \n 2     2   0.487    0.148         0.339 \n 3     3   0.169    0.246        -0.0763\n 4     4   0.191    0.271        -0.0803\n 5     5   0.627    0.302         0.325 \n 6     6   0.307    0.133         0.173 \n 7     7  NA        0.701        NA     \n 8     8   0.224   NA            NA     \n 9     9  -0.208    0.0965       -0.304 \n10    10   0.161    0.589        -0.429 \n# ‚Ñπ 12 more rows\n```\n\n\n:::\n:::\n\n\n\n## Q2g üèà\n\n-   Summarize the resulting data.frame in Q2d, with the following four variables:\n\n    -   posteam: String abbreviation for the team with possession.\n    -   passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\n    -   mean_epa: Mean value of epa in 2022 for each passer\n    -   n_pass: Number of observations for each passer\n\n-   Then find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- NFL2022_stuffs_EPA %>%\n  group_by(posteam, passer) %>%\n  summarise(\n    mean_epa = mean(epa, na.rm = TRUE),\n    n_pass = n()\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'posteam'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nquantile_threshold_passer <- quantile(summary_data$n_pass, 0.75)\nfiltered_summary_data <- summary_data %>%\n  filter(n_pass >= quantile_threshold_passer)\n\ntop_10_passers <- filtered_summary_data %>%\n  arrange(desc(mean_epa)) %>% \n  head(n=10)\n  \ntop_10_passers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 √ó 4\n# Groups:   posteam [10]\n   posteam passer       mean_epa n_pass\n   <chr>   <chr>           <dbl>  <int>\n 1 KC      P.Mahomes      0.286     880\n 2 MIA     T.Tagovailoa   0.234     453\n 3 SF      J.Garoppolo    0.200     348\n 4 BUF     J.Allen        0.172     785\n 5 DET     J.Goff         0.171     661\n 6 CIN     J.Burrow       0.153     854\n 7 DAL     D.Prescott     0.147     529\n 8 PHI     J.Hurts        0.138     672\n 9 JAX     T.Lawrence     0.128     764\n10 CLE     J.Brissett     0.0912    445\n```\n\n\n:::\n:::\n",
    "supporting": [
      "danl200-hw5-STARKEY_JAKE_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}