[
  {
    "objectID": "NBA Project/project.html",
    "href": "NBA Project/project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project üëè Welcome to our project, where we dive into the dynamic world of professional basketball through the lens of salaries and performance statisics. We will analyize a dataset with NBA player salaries and stats from the 2022-2023 season.\n\nlibrary(tidyverse)\nlibrary(skimr)"
  },
  {
    "objectID": "NBA Project/project.html#mpg-and-a-type-of-cars",
    "href": "NBA Project/project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "3.1 MPG and a Type of Cars",
    "text": "3.1 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) üöô üöö üöê.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "posts/NFL in 2022/danl200-hw5-STARKEY_JAKE.html",
    "href": "posts/NFL in 2022/danl200-hw5-STARKEY_JAKE.html",
    "title": "NFL 2022",
    "section": "",
    "text": "Provide a link for your Github repository ‚úÖ https://github.com/s1arkey/s1arkey.github.io\nAdd a URL for your website (https://YOUR_GITHUB_USERNAME.github.io/) in the About section in your GitHub repository webpage by clicking the setting. ‚úÖ\n\nSee about section in my GitHub repository webpage for answer\nLink to website https://s1arkey.github.io/\n\n\n\n\n\n\nMake sure that your GitHub repository, named YOUR_GITHUB_USERNAME.github.io, is set to public. ‚úÖ\nUpdate your website at https://YOUR_GITHUB_USERNAME.github.io/index.html to:\n\nInclude links to (1) your LinkedIn page, (2) GitHub page (https://github.com/YOUR_GITHUB_USERNAME), and (3) a PDF file of your R√®sume (https://YOUR_GITHUB_USERNAME.github.io/YOUR_RESUME.pdf) ‚úÖ\nOffer a description of yourself, detailing your education background and professional experience. ‚úÖ\nDisplay your own profile picture with your face, not the one shown below. ‚úÖ\n\n\n\n\n\n\nChange the title of your blog. ‚úÖ\n\nThat is, to replace Insightful Analytics with your own blog name.\n\nRemove the blog posts Post With Code, Starwars, and Beer Markets. ‚úÖ\nRevise the Welcome To My Blog post. ‚úÖ\nPost three different blog articles based on data analysis using the following three CSV files: ‚úÖ\n\nhttps://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv\nhttps://bcdanl.github.io/data/spotify_all.csv\nhttps://bcdanl.github.io/data/beer_markets.csv\n\n\nMake sure that each blog post has categories and is associated with a proper image file that is displayed as a thumbnail at the list page of the blog. ‚úÖ\nMake sure that each blog post uses emojis properly. (E.g., üòÑ üç∫ üé∂ üçï) ‚úÖ\nMake sure that each blog post includes its thumbnail image and at least three ggplot figures. ‚úÖ\nYou can refer to the previous DANL 200 Homework Assignments and Exams for your blog posts.\n\n\n##Question 2. NFL in 2022 üèà\n\nAdd a blog post with your answers for Question 2 to your website (https://YOUR_GITHUB_USERNAME.github.io/).\n\nMake sure that your blog post for Question 2 includes all the questionnaires and your answers to them.\nMake sure that your blog post for Question 2 has a section for each sub-question (e.g., Q2a, Q2b) in Question 2, so that the Table of Contents display the section for each questionnaire.\n\nThe following is the data.frame for Question 2.\n\n\nNFL2022_stuffs <- read.csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n\n\nNFL2022_stuffs is the data.frame that contains information about NFL games in year 2022, in which the unit of observation is a single play for each drive in a NFL game.\n\n\n\n\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game.\ndrive: Numeric drive number in the game.\nweek: Season week.\nposteam: String abbreviation for the team with possession.\nqtr: Quarter of the game (5 is overtime).\nhalf_seconds_remaining: Numeric seconds remaining in the half.\ndown: The down for the given play.\n\nBasically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it).\nIf you make 10 yards then you get another set of four downs.\n\npass: Binary indicator if the play was a pass play.\nwp: Estimated winning probability for the posteam given the current situation at the start of the given play.\n\n\n\n\n\nlibrary(tidyverse)\n\n‚îÄ‚îÄ Attaching core tidyverse packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 2.0.0 ‚îÄ‚îÄ\n‚úî dplyr     1.1.2     ‚úî readr     2.1.4\n‚úî forcats   1.0.0     ‚úî stringr   1.5.0\n‚úî ggplot2   3.4.4     ‚úî tibble    3.2.1\n‚úî lubridate 1.9.2     ‚úî tidyr     1.3.0\n‚úî purrr     1.0.2     \n‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ\n‚úñ dplyr::filter() masks stats::filter()\n‚úñ dplyr::lag()    masks stats::lag()\n‚Ñπ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(skimr)\n\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\nq2a <- NFL2022_stuffs %>% \n  filter(!is.na(posteam))\n\n\n\n\n\nSummarize the mean value of pass for each posteam when all the following conditions hold:\n\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\nq2b <- NFL2022_stuffs %>% \n  filter(between(wp, 0.2, 0.75),\n         down <= 2,\n         half_seconds_remaining > 120)\n\nmeanvalq2b <- q2b %>% \n  group_by(posteam) %>% \n  summarise(mean_pass = mean(pass, na.rm = TRUE))\n\n\n\n\n\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n\nmeanvaldesc <- meanvalq2b %>% \n  arrange(desc(mean_pass))\n\nggplot(meanvaldesc, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point()+\n  labs(x= \"Percentage of Pass Plays\",\n       y= \"Team with possesion\")\n\n\n\n\nComments:\n\nCincinnati, Kansas City, Los Angeles Chargers, Buffalo Bills, and Philadelphia eagles had the top 5 highest average percentage of pass plays during the 2022 season.\nAtlanta, Washington, Chicago, New Orleans, and Tennessee had the top 5 lowest average percentage of pass plays during the 2022 season.\n\n\n\n\n\nConsider the following data.frame, NFL2022_epa:\n\n\nNFL2022_epa <- read.csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game.\ndrive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\nAnswer:\n\nNFL2022_stuffs_EPA <- left_join(NFL2022_stuffs, NFL2022_epa, by = c(\"play_id\", \"game_id\", \"drive\", \"posteam\"))\n\nNFL2022_stuffs_EPA <- NFL2022_stuffs_EPA %>%\n  filter(!is.na(passer))\n\n\n\n\n\nProvide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n\n‚ÄúJ.Allen‚Äù\n‚ÄúP.Mahomes‚Äù\n\n\n\ntwo_passers <- c(\"J.Allen\", \"P.Mahomes\")\n\nfiltered_twopassers <- NFL2022_stuffs_EPA %>% \n  filter(passer %in% two_passers)\n\nmean_epa_data <- filtered_twopassers %>% group_by(week, passer) %>% \n  summarise(mean_epa = mean(epa, na.rm = TRUE))\n\n`summarise()` has grouped output by 'week'. You can override using the\n`.groups` argument.\n\nggplot(mean_epa_data, aes(x= week, y= mean_epa, color = passer))+\n  geom_line()+\n  scale_color_manual(values =c(\"J.Allen\" =\"blue\", \"P.Mahomes\"=\"red\"))+\n  labs(x= \"Week\",\n       y= \"Mean value of expected points added (EPA)\")\n\n\n\n\nComment: Patrick Mahomes generally had a higher mean value of epa. However, there were a few weeks that Josh Allen had a higher mean value of epa.\n\n\n\nCalculate the difference between the mean value of epa for ‚ÄúJ.Allen‚Äù the mean value of epa for ‚ÄúP.Mahomes‚Äù for each value of week.\n\ndifference_epa <- mean_epa_data %>% \n  pivot_wider(names_from = passer, values_from = mean_epa)\n\ndifference_epa$epa_differnce <- difference_epa$'J.Allen' - difference_epa$'P.Mahomes'\n\nprint(difference_epa)\n\n# A tibble: 22 √ó 4\n# Groups:   week [22]\n    week J.Allen P.Mahomes epa_differnce\n   <int>   <dbl>     <dbl>         <dbl>\n 1     1   0.530    0.698        -0.169 \n 2     2   0.487    0.148         0.339 \n 3     3   0.169    0.246        -0.0763\n 4     4   0.191    0.271        -0.0803\n 5     5   0.627    0.302         0.325 \n 6     6   0.307    0.133         0.173 \n 7     7  NA        0.701        NA     \n 8     8   0.224   NA            NA     \n 9     9  -0.208    0.0965       -0.304 \n10    10   0.161    0.589        -0.429 \n# ‚Ñπ 12 more rows\n\n\n\n\n\n\nSummarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\n\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n\nsummary_data <- NFL2022_stuffs_EPA %>%\n  group_by(posteam, passer) %>%\n  summarise(\n    mean_epa = mean(epa, na.rm = TRUE),\n    n_pass = n()\n  )\n\n`summarise()` has grouped output by 'posteam'. You can override using the\n`.groups` argument.\n\nquantile_threshold_passer <- quantile(summary_data$n_pass, 0.75)\nfiltered_summary_data <- summary_data %>%\n  filter(n_pass >= quantile_threshold_passer)\n\ntop_10_passers <- filtered_summary_data %>%\n  arrange(desc(mean_epa)) %>% \n  head(n=10)\n  \ntop_10_passers\n\n# A tibble: 10 √ó 4\n# Groups:   posteam [10]\n   posteam passer       mean_epa n_pass\n   <chr>   <chr>           <dbl>  <int>\n 1 KC      P.Mahomes      0.286     880\n 2 MIA     T.Tagovailoa   0.234     453\n 3 SF      J.Garoppolo    0.200     348\n 4 BUF     J.Allen        0.172     785\n 5 DET     J.Goff         0.171     661\n 6 CIN     J.Burrow       0.153     854\n 7 DAL     D.Prescott     0.147     529\n 8 PHI     J.Hurts        0.138     672\n 9 JAX     T.Lawrence     0.128     764\n10 CLE     J.Brissett     0.0912    445"
  },
  {
    "objectID": "posts/Spotify all/spotifyall.html",
    "href": "posts/Spotify all/spotifyall.html",
    "title": "Spotify All",
    "section": "",
    "text": "Make sure that each blog post has categories and is associated with a proper image file that is displayed as a thumbnail at the list page of the blog\nake sure that each blog post uses emojis properly. (E.g., üòÑ üç∫ üé∂ üçï)\nMake sure that each blog post includes its thumbnail image and at least three ggplot figures.\nYou can refer to the previous DANL 200 Homework Assignments and Exams for your blog posts."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Thanks for tuning into my project! My blogs break down several data frames. Currently you are on my welcome post. The other blogs are Beer Markets, Spotify, Restaurants, and NFL in 2022.\nDuring free time I like to hangout with friends. Other hobbies include lifting, playing lacrosse, skiing, and going on hikes.\nI hope you enjoy my website."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jake Starkey",
    "section": "",
    "text": "Jake Starkey majors in Data Analytics. Outside of school, Jake plays lacrosse and loves the outdoors. At home he enjoys surfing anytime there is a wave"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Jake Starkey",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  Major in Data Analytics | Aug 2022 - May 2026"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Jake Starkey",
    "section": "Experience",
    "text": "Experience\nStudent | August 2022 - May 2026"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Jake Starkeys blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nNov 2, 2023\n\n\nJake Starkey\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nNov 2, 2023\n\n\nJake Starkey\n\n\n7 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nNov 2, 2023\n\n\nJake Starkey\n\n\n0 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nJake Starkey\n\n\n0 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Jake Starkey",
    "section": "",
    "text": "√ü‚Äî title: DANL Project subtitle: ‚ÄúData-Driven Mastery: Unlocking Business Potential‚Äù author: - Name 1 - Name 2 - Name 3 - Name 4 - Name 5\ntoc: true toc-title: ‚ÄúTable of Contents‚Äù toc-depth: 2 number-sections: true\nfig-width: 9\nexecute: code-tools: true message: false warning: false\nfrom: markdown+emoji"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "Jake Starkey",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\nmpg <- ggplot2::mpg\n\n\n\n\n  \n\n\n\nskim(mpg) %>% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n1\n4\n10\n0\n15\n0\n\n\nmodel\n1\n2\n22\n0\n38\n0\n\n\ntrans\n1\n8\n10\n0\n10\n0\n\n\ndrv\n1\n1\n1\n0\n3\n0\n\n\nfl\n1\n1\n1\n0\n5\n0\n\n\nclass\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n‚ñá‚ñÜ‚ñÜ‚ñÉ‚ñÅ\n\n\nyear\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\ncyl\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\ncty\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n‚ñÜ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nhwy\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n‚ñÖ‚ñÖ‚ñá‚ñÅ‚ñÅ"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "Jake Starkey",
    "section": "MPG and a Type of Cars",
    "text": "MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) :blue_car: :truck: :minibus:.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  }
]